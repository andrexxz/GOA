// let - ცვლადი (variable), რომელიც შექმნილია let - ით, შეიძლება შეიცვალოს შემდგომში. 
let age = 25; // let ცვლადი, რომელსაც მნიშვნელობა 25 აქვს
let name = "Andria"; // let ცვლადი, რომელსაც მნიშვნელობა არის "Andria"
let isStudent = true; // let ცვლადი, რომელსაც მნიშვნელობა true აქვს (boolean ტიპი)

// const - ცვლადი, რომელიც const - ით არის შექმნილი, მისი მნიშვნელობა არ შეიძლება შეიცვალოს.
const pi = 3.14; // const ცვლადი, რომელსაც მნიშვნელობა აქვს 3.14
const country = "Georgia"; // const ცვლადი, რომელსაც მნიშვნელობა აქვს "Georgia"
const isHuman = true; // const ცვლადი, რომელსაც მნიშვნელობა true აქვს

// კომენტარებით ახსნა:
// let - გამოიყენება ცვლადების (variables) შესაქმნელად, რომელთა მნიშვნელობა შეიძლება შეიცვალოს.
// მაგალითად:
let score = 10; // score-ის საწყისი მნიშვნელობა
score = 15; // score-ს ახალი მნიშვნელობა 15 გახდა

// const - გამოიყენება ცვლადების (constants) შესაქმნელად, რომელთა მნიშვნელობა არ შეიძლება შეიცვალოს.
// მაგალითად:
const maxScore = 100; // maxScore-ის მნიშვნელობა არის 100 და ეს არ შეიცვლება
// maxScore = 200; // შეცდომა! const ცვლადის მნიშვნელობის შეცვლა შეუძლებელია

// let და const-ის შორის განსხვავებები:
// 1. let-ის ცვლადის მნიშვნელობა შეიძლება შეიცვალოს, ხოლო const-ის - არა.
// 2. const-ის გამოყენება რეკომენდებულია იმ მონაცემებისთვის, რომლებიც ფიქსირებულია და არასოდეს უნდა შეიცვალოს.
// 3. ორივე გამოიყენება ბლოკის სკოპის (block scope) ფარგლებში, რაც ნიშნავს, რომ ისინი ხელმისაწვდომი არიან მხოლოდ იმ ბლოკში, სადაც დეკლარირებულნი არიან.
