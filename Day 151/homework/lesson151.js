/*კომენტარების გამოყენებით ახსენით თუ რა არის და რისთვის გამოიყენება API.
კომენტარების გამოყენებით ახსენით თუ რამდენი ტიპის API არსებობს და რა განსხვავებაა მათ შორის.
კომენტარების გამოყენებით ახსენით თუ როგორ მუშაობს API, რამდენ ეტაპს მოიცავს და ასევე ახსენით ეტაპების დანიშნულება. */
// API (Application Programming Interface) არის პროგრამული ინტერფეისი, რომელიც საშუალებას აძლევს სხვადასხვა პროგრამებს და სერვისებს ერთმანეთთან კომუნიკაცია მოახდინონ.
// არსებობს რამდენიმე ტიპის API:
// 1. Web API - ეს არის ინტერნეტზე ხელმისაწვდომი API, რომელიც საშუალებას აძლევს პროგრამებს HTTP პროტოკოლის მეშვეობით კომუნიკაცია მოახდინონ.
// 2. Library API - ეს არის პროგრამული ბიბლიოთეკების ინტერფეისი, რომელიც საშუალებას აძლევს პროგრამებს კონკრეტული ფუნქციების გამოყენება.
// 3. Operating System API - ეს არის ოპერაციული სისტემის ინტერფეისი, რომელიც საშუალებას აძლევს პროგრამებს ოპერაციული სისტემის რესურსების გამოყენება, როგორიცაა ფაილები, პროცესები და სხვა.
// 4. Hardware API - ეს არის აპარატურის ინტერფეისი, რომელიც საშუალებას აძლევს პროგრამებს აპარატურის რესურსების გამოყენება, როგორიცაა სენსორები, კამერები და სხვა.   
// API მუშაობს შემდეგი ეტაპების მეშვეობით:
// 1. მოთხოვნა (Request) - პროგრამა ან სერვისი აკეთებს მოთხოვნას API-სთვის, რომელიც შეიცავს ინფორმაციას, რაც სურს მიიღოს ან გააკეთოს.
// 2. დამუშავება (Processing) - API იღებს მოთხოვნას და ამუშავებს მას. ეს შეიძლება მოიცავდეს მონაცემების მიღებას, დამუშავებას ან სხვა ოპერაციების შესრულებას.
// 3. პასუხი (Response) - API აგზავნის პასუხს პროგრამას ან სერვისს, რომელიც შეიცავს მოთხოვნის შედეგებს ან სტატუსს. პასუხი შეიძლება იყოს JSON, XML ან სხვა ფორმატში.
// 4. გამოყენება (Usage) - პროგრამა ან სერვისი იღებს API-ს პასუხს და იყენებს მას, მაგალითად, მონაცემების ჩვენებისთვის ან სხვა ოპერაციების შესასრულებლად.    