# 1) ჩამოწერეთ და ახსენით თითოეული collection ტიპის თვისებები რაც დღეს ვისწავლეთ/გავიმეორეთ (list, tuple, set)

# List (სია)
# - Mutable (შეცვლადი): სიაში ელემენტების დამატება, წაშლა და ცვლილება შესაძლებელია.
# - Ordered (ორგანიზებული): სიაში ელემენტები ინახება მათში დამატების მიხედვით.
# - Duplicates allowed (დუბლიკატების დაშვება): სიაში შეიძლება იყოს იგივე ელემენტები რამდენჯერმე.
# - Syntax: my_list = [1, 2, 3, 4]

# Tuple (ტუფლი)
# - Immutable (უმუშევარი): ტუფლში ელემენტების ცვლილება არ შეიძლება.
# - Ordered (ორგანიზებული): ტუფლის ელემენტები ინახება მათი შემოწმების დროს.
# - Duplicates allowed (დუბლიკატების დაშვება): ტუფლში შეიძლება იყოს იგივე ელემენტები.
# - Syntax: my_tuple = (1, 2, 3, 4)

# Set (სეტა)
# - Mutable (შეცვლადი): სეტში შეიძლება დაემატოს ახალი ელემენტები ან წაიშალოს არსებული ელემენტები.
# - Unordered (უხარისხო): სეტში არ არსებობს ელემენტების განმეორება და მათ არ აქვთ კონკრეტული რიგი.
# - No duplicates (არასაჭიროა დუპლიკატები): სეტში არ შეიძლება დუპლიკატები იყოს, ეს იქნება ავტომატურად ამოღებული.
# - Syntax: my_set = {1, 2, 3, 4}

# 2) შექმენით თითოეული, ანუ list1, tuple1, set1 ცვლადები

list1 = [1, 2, 3, 4, 5]
tuple1 = (1, 2, 3, 4, 5)
set1 = {1, 2, 3, 4, 5}

# 3) გამოიყენეთ ნასწავლი ფუნქციები კოლექციებზე, თუ გამოყენება არ შეიძლება მაშინ ახსენით რატომ

# List Functions (List1):
# append() - ელემენტის დამატება სიაში
list1.append(6)
print("List after append:", list1)  # [1, 2, 3, 4, 5, 6]

# remove() - ელემენტის წაშლა სიიდან
list1.remove(3)
print("List after remove:", list1)  # [1, 2, 4, 5, 6]

# pop() - ბოლო ელემენტის ამოღება
list1.pop()
print("List after pop:", list1)  # [1, 2, 4, 5]

# Tuple Functions (Tuple1):
# count() - ამოიტანს, რამდენჯერ არის მოცემული ელემენტი ტუფლში
tuple1 = (1, 2, 3, 4, 5, 1)
print("Count of 1 in tuple:", tuple1.count(1))  # 2

# index() - დააბრუნებს ინდექსს, სადაც ელემენტი პირველად არის
print("Index of 3 in tuple:", tuple1.index(3))  # 2

# Set Functions (Set1):
# add() - ელემენტის დამატება სეტში
set1.add(6)
print("Set after add:", set1)  # {1, 2, 3, 4, 5, 6}

# remove() - ელემენტის წაშლა სეტიდან
set1.remove(4)
print("Set after remove:", set1)  # {1, 2, 3, 5, 6}

# union() - ორი სეტის გაერთიანება
set2 = {7, 8, 9}
print("Union of sets:", set1.union(set2))  # {1, 2, 3, 5, 6, 7, 8, 9}

# intersection() - ორი სეტის გადაკვეთა
set3 = {3, 4, 5}
print("Intersection of sets:", set1.intersection(set3))  # {5}
